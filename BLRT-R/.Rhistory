?R6
library(methods)
?setClass
new_Date <- function(x = double()) {
stopifnot(is.double(x))
structure(x, class = "Date")
}
new_Date(c(-1, 0, 1))
?Date
structure(1, class = "Date")
structure(1, class = "Date4")
Date(1)
new_difftime <- function(x = double(), units = "secs") {
stopifnot(is.double(x))
units <- match.arg(units, c("secs", "mins", "hours", "days", "weeks"))
structure(x,
class = "difftime",
units = units
)
}
new_difftime(c(1, 10, 3600), "secs")
new_difftime <- function(x = double(), units = "secs") {
stopifnot(is.double(x))
units <- match.arg(units, c("secs", "mins", "hours", "days", "weeks"))
structure(x,
class = "difft0ime",
units = units
)
}
new_difftime(c(1, 10, 3600), "secs")
?structure
default = 10 # clean the packages
len = length(search())
if(len > default){
for(i in 1:(len - default)){
detach(pos=2)
}
}
graphics.off() # close all graphics
rm(list=ls()) # clean the environment
cat('\f') # clean the console
library(RC)
library(CR)
eval(cc())
eval(CR::cc())
View(cc)
library(CR)
force(cc)
remove.packages("CR")
library(cleanR)
eval(cc())
library(cleanR)
eval(cc())
eval(cc)
eval(cc())
?cleanR
?cc
View(cc)
help(cleanR)
View(cc)
detach(pos=2)
?detach
library(CR)
library(cleanR)
eval(cc())
detach(cleanR)
detach('cleanR')
library(cleanR)
detach(2)
library(cleanR)
View(cc)
source("~/Documents/GitHub/Structural-Learning/EGLv1/neighborhood.R", echo=TRUE)
source("~/Documents/GitHub/Structural-Learning/EGLv1/neighborhood.R", echo=TRUE)
source("~/Documents/GitHub/Structural-Learning/EGLv1/neighborhood.R", echo=TRUE)
source("~/Documents/GitHub/Structural-Learning/EGLv1/neighborhood.R", echo=TRUE)
Theta
neighbor
neighbor <- Neighborhood$new(Sigma, 0.1)$run()
neighbor
# codes for testing
graph <- sample_pa(n=10, m=3, directed=F)
adj <- as_adj(graph, sparse=F)
Theta <- diag(10, nrow=nrow(adj)) + adj
Sigma <- base::solve(Theta)
neighbor <- Neighborhood$new(Sigma, 0.1)$run()
neighbor == (Theta != 0)
neighbor
Theta <- diag(2, nrow=nrow(adj)) + adj
Sigma <- base::solve(Theta)
neighbor <- Neighborhood$new(Sigma, 0.1)$run()
Theta <- diag(5, nrow=nrow(adj)) + adj
Sigma <- base::solve(Theta)
neighbor <- Neighborhood$new(Sigma, 0.1)$run()
neighbor == (Theta != 0)
neighbor
neighbor <- Neighborhood$new(Sigma, 0.01)$run()
neighbor == (Theta != 0)
neighbor
neighbor <- Neighborhood$new(Sigma, 0.0001)$run()
neighbor == (Theta != 0)
neighbor
Theta
eval(cc::cc)
A <- matrix(runif(25), 5)
A <- cov2cor(A)
A
solve(A)
eval(cc::cc)
library(graphicalExtremes)
?Gamma2Sigma
Gamma <- cbind(
c(0, 1.5, 1.5, 2),
c(1.5, 0, 2, 1.5),
c(1.5, 2, 0, 1.5),
c(2, 1.5, 1.5, 0)
)
Gamma2Sigma(Gamma, k = 1, full = FALSE)
Gamma <- cbind(
c(0, 1.5, 1.5, 2),
c(1.5, 0, 2, 1.5),
c(1.5, 2, 0, 1.5),
c(2, 1.5, 1.5, 0)
)
Gamma2Sigma(Gamma)
Gamma <- cbind(
c(0, 3, 2, 2),
c(3, 0, 2, 1.5),
c(2, 2, 0, 1.5),
c(2, 1.5, 1.5, 0)
)
Gamma2Sigma(Gamma)
Sigma <- Gamma2Sigma(Gamma)
Sigma
Sigma2 <- cov2cor(Sigma2)
Sigma2 <- cov2cor(Sigma)
Gamma2 <- Sigma2Gamma(Sigma)
Gamma
Gamma2
Gamma2 <- Sigma2Gamma(Sigma2)
Gamma
Gamma2
View(Sigma)
View(Sigma2)
Gamma2Sigma(Gamma, 1)
Gamma2Sigma(Gamma2, 1)
Gamma2Sigma(Gamma, 2)
Gamma2Sigma(Gamma2, 2)
solve(Gamma2Sigma(Gamma, 1))
solve(Gamma2Sigma(Gamma2, 1))
solve(Gamma2Sigma(Gamma, 3))
solve(Gamma2Sigma(Gamma2, 3))
eval(cc::cc)
?graphicalExtremes:::Zmatrix
eval(cc::cc)
<<<<<<< HEAD
install.packages("devtools")
devtools::install_github("IanFla/Clean-RStudio")
devtools::install_github(https://github.com/IanFla/Clean-RStudio.git)
devtools::install_github("https://github.com/IanFla/Clean-RStudio.git")
install.packages("Rtools")
devtools::install_github("https://github.com/IanFla/Clean-RStudio.git")
devtools::install_github("https://github.com/IanFla/Clean-RStudio.git", force=T)
=======
library(ggplot2)
>>>>>>> 5ab4fda642b791fab80d608fb279976f46a894df
eval(cc::cc)
?apply
eval(cc::cc)
?apply
R.version()
R.Version()
eval(cc::cc)
install.packages("installr")
installr::updateR()
eval(cc::cc)
library(sugm)
library(flare)
sugm.likelihood
View(sugm.select)
library(flare-internal)
eval(cc::cc)
?glassoFast::glassoFast
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test3.R")
?glasso::glassopath
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test3.R")
View(fit)
eval(cc::cc)
eval(cc::cc)
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
graph.est <- igraph::graph_from_adjacency_matrix(abs(solve(cov2cor(model$Sigma))) > 1e-4, mode="undirected", diag=F)
print(score(graph.est, model$graph))
graph.est <- igraph::graph_from_adjacency_matrix(abs(solve(cov2cor(model$Sigma) + 0.01 * diag(model$dim))) > 1e-4, mode="undirected", diag=F)
print(score(graph.est, model$graph))
graph.est <- igraph::graph_from_adjacency_matrix(abs(solve(cov2cor(model$Sigma) + 0.001 * diag(model$dim))) > 1e-4, mode="undirected", diag=F)
print(score(graph.est, model$graph))
graph.est <- igraph::graph_from_adjacency_matrix(abs(solve(cov2cor(model$Sigma) + 0.0001 * diag(model$dim))) > 1e-4, mode="undirected", diag=F)
print(score(graph.est, model$graph))
graph.est <- igraph::graph_from_adjacency_matrix(abs(solve(cov2cor(model$Sigma) + 0.00001 * diag(model$dim))) > 1e-4, mode="undirected", diag=F)
print(score(graph.est, model$graph))
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
?glassoFast::glassoFast
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
?glassoFast::glassoFast
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test4.R")
eval(cc::cc)
eval(cc::cc)
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
cat()
cat(3,4)
cat(3,4, sep="")
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
model <- generate$BA_model(19)
test(model)
model <- generate$BA_model(18)
test(model)
model <- generate$BA_model(20)
test(model)
model <- generate$block_model(2, 5)
test(model)
model <- generate$block_model(1, 5)
test(model)
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/obj.generator.R")
eval(cc::cc)
install.packages("installr")
eval(cc::cc)
installr::updateR()
installr::updater()
?installr::updateR
eval(cc::cc)
devtools::install_github('andreacirilloac/updateR')
eval(cc::cc)
library(updateR)
updateR()
updateR()
library(qgraph)
install.packages("qgraph")
library(qgraph)
force(EBICglasso)
View(EBICglasso)
library(glasso)
force(glasso)
View(glasso)
eval(cc::cc)
install.packages("devtools")
eval(cc::cc)
devtools::install_github("pzwiernik/golazo", build_vignettes=TRUE)
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/criterion/drop/test.R")
eval(cc::cc)
?glassoFast::glassoFast
?glasso::glasso
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
?huge::huge
library(huge)
force(huge.select)
View(huge.select)
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
?golazo::EBICgolazo
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
golazo::EBICgolazo(diag(10),n=10)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
?qgraph::EBICglasso
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
View(fit)
fit[["ebic"]]
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
fit[["lambda"]]
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
?golazo::EBICgolazo
?qgraph::EBICglasso
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
View(fit)
fit[["optnet"]]
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
source("~/Documents/GitHub/Structural-Learning/experiment/oracle/drop/test.ebic.R")
eval(cc::cc)
Sigma <- matrix(c(1, 0.1, -0.1, 0.1, 1, 0.1, -0.1, 0.1, 1), 3)
Sigma
matrixcalc::is.positive.definite(Sigma)
Sigma <- matrix(c(1, 0.5, -0.5, 0.5, 1, 0.5, -0.5, 0.5, 1), 3)
Sigma
matrixcalc::is.positive.definite(Sigma)
Sigma <- matrix(c(1, 0.4, -0.4, 0.4, 1, 0.4, -0.4, 0.4, 1), 3)
Sigma
matrixcalc::is.positive.definite(Sigma)
Sigma <- matrix(c(1, 0.49, -0.49, 0.49, 1, 0.49, -0.49, 0.49, 1), 3)
matrixcalc::is.positive.definite(Sigma)
Sigma
Sigma <- matrix(c(1, 0.5, 0, 0, -0.5, 0.5, 1, -0.5, 0, 0, -0.5, 1, 0.5, -0.5, 0, 0.5, 1), 3)
Sigma <- matrix(c(1, 0.5, 0, -0.5, 0.5, 1, -0.5, 0, 0, -0.5, 1, 0.5, -0.5, 0, 0.5, 1), 3)
Sigma <- matrix(c(1, 0.5, 0, -0.5, 0.5, 1, -0.5, 0, 0, -0.5, 1, 0.5, -0.5, 0, 0.5, 1), 4)
Sigma
Sigma
matrixcalc::is.positive.definite(Sigma)
Sigma <- matrix(c(1, 0.5, 0, -0.49, 0.5, 1, -0.49, 0, 0, -0.49, 1, 0.5, -0.49, 0, 0.5, 1), 4)
matrixcalc::is.positive.definite(Sigma)
Sigma
Sigma
eval(cc::cc)
?graphicalExtremes::complete_Gamma
eval(cc::cc)
?glassoFast::glassoFast
sort(c(seq(0.05, 0.95, length=20), exp(seq(-7, 0, length=30))))
library(flare)
force(slim.lasso.ladm.scr)
force(sugm.clime.ladm.scr)
View(sugm.clime.ladm.scr)
View(sugm)
eval(cc::cc)
?model.matrix
a <- c(1, 3, 2, 4, 3, 1, 2 ,3)
model.matrix(~ a)
b = gl(4,1,12)
?gl
b
model.matrix(~ b)
eval(cc::cc)
a = gl(4,1,12)
b = gl(4,1,12)
model.matrix(~ a + b)
model.matrix(~ a + b + a * b)
model.matrix(~ a + b + a * b)
eval(cc::cc)
setwd("~/Documents/GitHub/Bayesian-Log-Rank-Test/BLRT-R")
eval(cc::cc)
source("~/Documents/GitHub/Bayesian-Log-Rank-Test/BLRT-R/fun.blrt.R")
eval(cc::cc)
