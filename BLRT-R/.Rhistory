setwd("~/Documents/GitHub/Bayesian-Log-Rank-Test/BLRT-R")
reticulate::source_python('~/Documents/GitHub/Bayesian-Log-Rank-Test/BLRT4/sampling/MDP.py')
eval(cc::cc)
setwd("~/Documents/GitHub/Bayesian-Log-Rank-Test/BLRT-R")
eval(cc::cc)
library(survival)
a<-1
b<-2
list(a, b)
eval(cc::cc)
pweibull(0, 1)
pweibull(1, 1)
1 - exp(-1)
qweibull(1, 1)
qweibull(0.5, 1)
pweibull(0.6931472, 1)
eval(cc::cc)
pweibull(Inf, 1)
eval(cc::cc)
which(2:4 < 3)
which(2:4 < 4)
eval(cc::cc)
table(c(1, 2, 1, 1, 1, 3, 3, 3))
t <- table(c(1, 2, 1, 1, 1, 3, 3, 3))
t <- table(c(1, 2, 1, 1, 1, 3, 3, 3, 5))
t
?t
T <- table(c(1, 2, 1, 1, 1, 3, 3, 3, 5))
?T
levels(T)
factor(T)
eval(cc::cc)
set(c(1, 2, 2))
name(table(c(1, 2, 1, 1, 1, 3, 3, 3, 5)))
names(table(c(1, 2, 1, 1, 1, 3, 3, 3, 5)))
unique(c(1, 2, 3, 3, 1, 10))
eval(cc::cc)
sample(10)
sample(c(2:4))
sample(c(2:4))
sample(c(2:4))
sample(c(2:4) * 2)
sample(c(2:4) * 2)
sample(c(2:4) * 2)
sample(c(2:4) * 2)
eval(cc::cc)
1 <4 < 5
c(T, F) & c(T, T)
eval(cc::cc)
?sample
sample(prob=c(0.3, 0.3, 0.3, 0.1))
sample(1:4, prob=c(0.3, 0.3, 0.3, 0.1))
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1))
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1))
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1))
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1))
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1))
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1))
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1))
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1))
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1))
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1))
table(sample(1:4, 1000, prob=c(0.3, 0.3, 0.3, 0.1), replace=T))
table(sample(1:4, 10000, prob=c(0.3, 0.3, 0.3, 0.1), replace=T))
table(sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T))
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.2), replace=T)
sample(1:4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
sample(4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
sample(4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
sample(4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
sample(4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
sample(4, 1, prob=c(0.3, 0.3, 0.3, 0.1), replace=T)
table(sample(4, 10000, prob=c(0.3, 0.3, 0.3, 0.1), replace=T))
table(sample(4, 10000, prob=c(0.3, 0.3, 0.3, 0.1), replace=T))
table(sample(4, 10000, prob=c(0.3, 0.3, 0.3, 0.1), replace=T))
table(sample(4, 10000, prob=c(0.3, 0.3, 0.3, 0.1), replace=T))
table(sample(4, 10000, prob=c(0.3, 0.3, 0.3, 0.1), replace=T))
table(sample(4, 10000, prob=c(0.3, 0.3, 0.3, 0.2), replace=T))
table(sample(4, 10000, prob=c(0.3, 0.3, 0.3, 0.2), replace=T))
table(sample(4, 10000, prob=c(0.3, 0.3, 0.3, 0.2), replace=T))
table(sample(4, 10000, prob=c(0.3, 0.3, 0.3, 0.3), replace=T))
table(sample(4, 10000, prob=c(0.3, 0.3, 0.3, 0.3), replace=T))
table(sample(4, 10000, prob=c(0.3, 0.3, 0.3, 0.3), replace=T))
table(sample(4, 10000, prob=c(0.3, 0.3, 0.3, 0.3), replace=T))
table(sample(4, 10000, prob=c(0.3, 0.3, 0.3, 0.1), replace=T))
runif(1)
runif(1)
runif(1)
runif(1)
?rgamma
